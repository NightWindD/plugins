# https://kiali.io/docs/installation/installation-guide/install-with-helm/
apiVersion: plugins.kubegems.io/v1beta1
kind: Plugin
metadata:
  name: kiali-server
  namespace: {{ .Release.Namespace }}
spec:
  kind: helm
  url: https://kiali.org/helm-charts
  version: {{ .Values.kiali.version }}  # update to related version when istio version changed
  # see: https://github.com/istio/istio/blob/master/manifests/addons/values-kiali.yaml
  values:
    server:
      web_history_mode: hash
      web_fqdn: kiali.{{ .Values.global.clusterName }}.kubegems.io
    auth:
      strategy: anonymous
    deployment:
      pod_annotations:
        sidecar.istio.io/inject: "false"
      # image_name: quay.io/kiali/kiali
      {{ include "common.images.repository" ( dict "key" "image_name" "registry" "quay.io" "repository" "kiali/kiali" "context" .) }}
    external_services:
      grafana:
        url: {{ .Values.monitoring.grafana.address }}
      prometheus:
        url: {{ .Values.monitoring.prometheus.address }}
      tracing:
        url: {{ .Values.tracing.jaeger.zipkin.address }}
---
# https://github.com/istio/istio/tree/master/manifests/charts/istio-operator
apiVersion: plugins.kubegems.io/v1beta1
kind: Plugin
metadata:
  name: istio-operator
  namespace: {{ .Release.Namespace }}
spec:
  kind: helm
  url: https://github.com/istio/istio/archive/refs/tags/{{ .Values.chartVersion }}.tar.gz
  path: istio-{{ .Values.chartVersion }}/manifests/charts/istio-operator
  version: {{ .Values.chartVersion }}
  values:
    # hub: gcr.io/istio-testing  # in chart default hub just for testing
    {{ include "common.images.repository" ( dict "key" "hub" "registry" "gcr.io" "repository" "istio-testing" "context" .) }}
    tag:  {{ .Chart.AppVersion }}
---
# https://github.com/istio/istio/tree/master/manifests/charts/istio-operator
apiVersion: install.istio.io/v1alpha1
kind: IstioOperator
metadata:
  name: kubegems-istio
  namespace: {{ .Release.Namespace }}
  annotations:
    bundle.kubegems.io/ignore-options: OnUpdate
spec:
  components:
    pilot:
      k8s:
        env:
          - name: PILOT_FILTER_GATEWAY_CLUSTER_CONFIG
            value: "true"
    cni:
      enabled: {{ .Values.operator.istioCNI }}
  {{ include "common.images.repository" ( dict "key" "hub" "registry" "gcr.io" "repository" "istio" "context" .) }}
  tag: {{ .Chart.AppVersion }}
  meshConfig:
    defaultConfig:
      proxyMetadata:
        ISTIO_META_DNS_AUTO_ALLOCATE: {{ .Values.operator.istioDNS | quote }}
        ISTIO_META_DNS_CAPTURE: {{ .Values.operator.istioDNS | quote }}
      tracing:
        sampling: {{ .Values.tracing.sampling }}
        zipkin:
          address: {{ .Values.tracing.jaeger.zipkin.address }}
    enableTracing: {{ .Values.tracing.enabled }}
  values:
    gateways:
      istio-ingressgateway:
        injectionTemplate: gateway
    global:
      meshID: {{ .Values.operator.meshID }}
      multiCluster:
        clusterName: {{ .Values.global.clusterName }}
      network: {{ .Values.global.clusterName }}
      proxy_init:
        resources:
          limits:
            cpu: 50m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 32Mi
      proxy:
        autoInject: {{ .Values.proxy.autoInject }}
        resources:
          limits:
            cpu: {{ .Values.proxy.maxCpu }}
            memory: {{ .Values.proxy.maxMemory }}
          requests:
            cpu: 50m
            memory: 128Mi
      tracer:
        zipkin:
          address: {{ .Values.tracing.jaeger.zipkin.address}}
    istio_cni:
      enabled: {{ .Values.operator.istioCNI }}
